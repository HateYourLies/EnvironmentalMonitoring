package com.briup.dbstore;

import com.briup.entity.Environment;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.List;

/**
 * @Auther: vanse(lc)
 * @Date: 2023/9/21-09-21-11:10
 * @Description：将采集到的数据入库
 */
public class DBStoreImpl {
    String driver = "com.mysql.cj.jdbc.Driver";
    String url = "jdbc:mysql://localhost:3306/env?useSeverPrepStmts=true";
    String username = "env";
    String password = "env";

    public void insertData(List<Environment> list) {
        int count = 0;
        Connection conn = null;
        PreparedStatement ps = null;
        int last_day = -1;
        try {
            // jdbc6大步骤
            // 1.注册驱动
            Class.forName(driver);
            // 2.获取连接
            conn = DriverManager.getConnection(url, username, password);
            // 手动提交事务
            conn.setAutoCommit(false);
            // 3.获取sql执行器并准备sql stmt ps
            // 4.准备数据并执行
            Calendar instance = Calendar.getInstance();
            for (Environment environment : list) {
                instance.setTime(environment.getGatherDate());
                int day = instance.get(Calendar.DAY_OF_MONTH);
                if (last_day == -1) {
                    // 第一次
                    String sql = "insert into env_detail_" + day + " values(?,?,?,?,?,?,?,?,?,?)";
                    ps = conn.prepareStatement(sql);
                } else {
                    if (last_day != day) {
                        ps.executeBatch();
                        count = 0;
                        String sql = "insert into env_detail_" + day + " values(?,?,?,?,?,?,?,?,?,?)";
                        ps = conn.prepareStatement(sql);
                    }
                }

                ps.setString(1, environment.getName());
                ps.setString(2, environment.getSrcId());
                ps.setString(3, environment.getDesId());
                ps.setString(4, environment.getDevId());
                ps.setString(5, environment.getSensorAddress());
                ps.setInt(6, environment.getCount());
                ps.setString(7, environment.getCmd());
                ps.setInt(8, environment.getStatus());
                ps.setFloat(9, environment.getData());
                ps.setTimestamp(10, environment.getGatherDate());
                // 批处理
                ps.addBatch();
                // 每200条提交一次
                count++;
                if (count % 200 == 0) {
                    ps.executeBatch();
                }
                last_day = day;
            }
            ps.executeBatch();
            conn.commit();
        } catch (Exception e) {
            e.printStackTrace();
            try {
                conn.rollback();
            } catch (SQLException ex) {
                throw new RuntimeException(ex);
            }

        } finally {
            // 6.关闭资源
            try {
                if (ps != null) {
                    ps.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }
    }
}




